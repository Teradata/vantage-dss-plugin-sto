// This file is the descriptor for the Custom code recipe TeradataVantageTeradataVantageTeradataVantageTeradataVantageScriptTO_Plugin_compute_pythonrecipe_out
{
    // Meta data for display purposes
    "meta": {
        "label": "Teradata SCRIPT Table Operator",
        "author": "Me",
        "tags": [
            "Teradata",
            "SCRIPT Table Operator"
        ]
    },
    "kind": "PYTHON",
    // Inputs and outputs are defined by roles. In the recipe's I/O tab, the user can associate one
    // or more dataset to each input and output role.
    // The "arity" field indicates whether the user can associate several datasets to the role ('NARY')
    // or at most one ('UNARY'). The "required" field indicates whether the user is allowed to
    // associate no dataset with the role.
    "inputRoles": [
        {
            "name": "main",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        },
        {
            "name": "sto_scripts",
            "label": "Script Folder (Optional). Choose the Managed Folder that contains your script.",
            "arity": "UNARY",
            "required": false,
            "acceptsDataset": false,
            "acceptsManagedFolder": true
        }
    ],
    "outputRoles": [
        {
            "name": "main",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    // The field "params" holds a list of all the params
    // for wich the user will be prompted for values in the Settings tab of the recipe.
    // The available parameter types are:
    // STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, COLUMN, COLUMNS, TEXTAREA
    "params": [
        // {
        //     "name": "function",
        //     "label" : "Function Name",
        //     "type": "COLUMN",
        //     "columnRole":"input",
        //     "description":"Column storing function name",
        //     "mandatory" : true
        // },
        // A "SELECT" parameter is a multi-choice selector. Choices are specified using the selectChoice field
        {
            "name": "parameter3",
            "type": "SELECT",
            "selectChoices": [
                {
                    "value": "val_x",
                    "label": "display name for val_x"
                },
                {
                    "value": "val_y",
                    "label": "display name for val_y"
                }
            ]
        },
        // A 'COLUMN' parameter is a string, whose value is a column name from an input schema.
        // To specify the input schema whose column names are used, use the "columnRole" field like below.
        // The column names will come from the schema of the first dataset associated to that role.
        {
            "name": "parameter4",
            "type": "COLUMN",
            "columnRole": "input_B_role"
        }
        // The 'COLUMNS' type works in the same way, except that it is a list of strings.
    ],
    "readable": true,
    "writable": false,
    "paramsTemplate": "html/index.html",
    "paramsModule": "teradataScriptTO.module",
    "paramsPythonSetup": "python/DataTransformation.py"
}